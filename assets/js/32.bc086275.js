(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{224:function(v,t,a){"use strict";a.r(t);var l=a(0),_=Object(l.a)({},(function(){var v=this,t=v.$createElement,a=v._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[a("h4",{attrs:{id:"javascript数值转换一共有三种方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#javascript数值转换一共有三种方法"}},[v._v("#")]),v._v(" Javascript数值转换一共有三种方法")]),v._v(" "),a("ul",[a("li",[v._v("Number(),通用")]),v._v(" "),a("li",[v._v("parseInt(),转换字符串对象")]),v._v(" "),a("li",[v._v("parseFloat(),转换字符串对象")])]),v._v(" "),a("h4",{attrs:{id:"备注"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#备注"}},[v._v("#")]),v._v(" 备注")]),v._v(" "),a("ul",[a("li",[a("p",[v._v("Number()")]),v._v(" "),a("ul",[a("li",[v._v("boolean可以被转化为0或1")]),v._v(" "),a("li",[v._v("null可以被转化为0")]),v._v(" "),a("li",[v._v("ubdefined不能被转化，返回NaN")]),v._v(" "),a("li",[v._v("转化字符串时可直接转化整型和浮点型，也可将十六进制转化为十进      制返回，不可以对八进制进行相同操作")]),v._v(" "),a("li",[v._v("对于瞎几把打的字符串返回NaN")]),v._v(" "),a("li",[v._v("空字符串被转化为0；")])])]),v._v(" "),a("li",[a("p",[v._v("parseInt()")]),v._v(" "),a("ul",[a("li",[v._v("该方法更为常用，原理为从第一个字符开始检索，知道遇到非空格，如果第一个字符不为数字字符或符号，返回NaN,否则继续向后遍历，直到遇上非数字字符，然后忽略之后的字符串进行转化")]),v._v(" "),a("li",[v._v('可为该函数添加第二个参数，标注其基数(进制),eg:parseInt("AF",16)')]),v._v(" "),a("li",[v._v("该函数也可自行判断基数(前面加0x等)，但存在漏洞，故不推荐")])])]),v._v(" "),a("li",[a("p",[v._v("parseFloat()")]),v._v(" "),a("ul",[a("li",[v._v("该函数原理与上类似，且只识别第一个小数点之后的都无效")])])])])])}),[],!1,null,null,null);t.default=_.exports}}]);