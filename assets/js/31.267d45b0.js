(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{225:function(t,v,_){"use strict";_.r(v);var r=_(0),e=Object(r.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h2",{attrs:{id:"js内置对象之number"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#js内置对象之number"}},[t._v("#")]),t._v(" js内置对象之Number")]),t._v(" "),_("h4",{attrs:{id:"number-对象的属性"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#number-对象的属性"}},[t._v("#")]),t._v(" Number 对象的属性")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("属性")]),t._v(" "),_("th",[t._v("描述")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("constructor")]),t._v(" "),_("td",[t._v("返回创建此对象时的函数的引用（基本不用）")])]),t._v(" "),_("tr",[_("td",[t._v("MAX_VALUE")]),t._v(" "),_("td",[t._v("可表示的最大的数")])]),t._v(" "),_("tr",[_("td",[t._v("MIN_VALUE")]),t._v(" "),_("td",[t._v("可表示的最小的数")])]),t._v(" "),_("tr",[_("td",[t._v("NaN")]),t._v(" "),_("td",[t._v("非数字值")])]),t._v(" "),_("tr",[_("td",[t._v("NEGATIVE_INFINITY")]),t._v(" "),_("td",[t._v("负无穷大，溢出是返回该值")])]),t._v(" "),_("tr",[_("td",[t._v("POSITIVE_INFINITY")]),t._v(" "),_("td",[t._v("正无穷大，溢出时返回该值")])])])]),t._v(" "),_("br"),t._v(" "),_("p",[t._v("####Number对象的方法")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("方法")]),t._v(" "),_("th",[t._v("作用")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("toString")]),t._v(" "),_("td",[t._v("将数字转换为字符串")])]),t._v(" "),_("tr",[_("td",[t._v("toLocaleString")]),t._v(" "),_("td",[t._v("将数字转换为字符串，以本地数字顺序")])]),t._v(" "),_("tr",[_("td",[t._v("toFixed")]),t._v(" "),_("td",[t._v("将数字转换为字符串，结果有小数点后指定位数的数字")])]),t._v(" "),_("tr",[_("td",[t._v("toExponential")]),t._v(" "),_("td",[t._v("将对象的值转换为指数计数法")])]),t._v(" "),_("tr",[_("td",[t._v("toPrecision")]),t._v(" "),_("td",[t._v("将对象的值设置为指定格式的数字")])]),t._v(" "),_("tr",[_("td",[t._v("valueOf")]),t._v(" "),_("td",[t._v("返回一个 Number 对象的基本数字值")])])])]),t._v(" "),_("br"),t._v("\n####Number方法详解\n"),_("ul",[_("li",[_("p",[t._v("Number.toString")]),t._v(" "),_("pre",[_("code",[t._v('  <script type="text/javascript">\n  var number = new Number(1337);\n  document.write (number.toString())\n  <\/script>\n')])])]),t._v(" "),_("li",[_("p",[t._v("Number.Fixed")]),t._v(" "),_("pre",[_("code",[t._v('  <script type="text/javascript">\n  var num = new Number(13.37);\n  document.write (num.toFixed(1))\n      <\/script>\n')])]),t._v(" "),_("ul",[_("li",[t._v("该方法对不足为进行舍入时，采用四舍五入法")])])]),t._v(" "),_("li",[_("p",[t._v("Number.toExponential")]),t._v(" "),_("pre",[_("code",[t._v('  \t<script type="text/javascript">\n  var num = new Number(10000);\n  document.write (num.toExponential(1))\n      <\/script>\n')])]),t._v(" "),_("ul",[_("li",[t._v("该方法请务必加上参数，参数表示小数点后保留位数,取值为1~20之间，若不加，以实际最大位数取，不足时以0补足")])])]),t._v(" "),_("li",[_("pre",[_("code",[t._v('  Number.toPrecision\n\n      <script type="text/javascript">\n      var num = new Number(10000);\n      document.write (num.toPrecision(4))\n      <\/script>\n')])]),t._v(" "),_("ul",[_("li",[t._v("若数字位数超出指定位数，该方法将数字设置为指数计数法，若不加参数，仅将数字转换为字符串")])])]),t._v(" "),_("li",[_("p",[t._v("Number.valueOf")]),t._v(" "),_("ul",[_("li",[t._v("该函数返回一个该数字对象的的基本函数值，若参数不是数字抛出一个TypeError")])])])])])}),[],!1,null,null,null);v.default=e.exports}}]);