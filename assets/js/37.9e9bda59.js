(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{223:function(e,a,s){"use strict";s.r(a);var t=s(0),n=Object(t.a)({},(function(){var e=this,a=e.$createElement,s=e._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h2",{attrs:{id:"get方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#get方法"}},[e._v("#")]),e._v(" get方法")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("app.get('/login',function (req,res) {\n    console.log(req.query.account);\n    console.log(req.query.password);\n    ......\n    //存入数据库\n    ......\n    //从定向页面\n    res.send();\n});\n")])])]),s("ul",[s("li",[e._v("需注意的是该方法会重新定向页面，可返回一HTML页面提示用户成功或失败，不过该方法会在用户刷新页面时发出警告，且影响到回退按钮与历史记录，因此不推荐使用。")]),e._v(" "),s("li",[e._v("我们知道的是get方法传送数据是是将数据保存在请求头中，直接跟在URL之后，因此长度有限制，一般不能超过1024B，所以一般不使用该方法发送表单数据。")])]),e._v(" "),s("h2",{attrs:{id:"post方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#post方法"}},[e._v("#")]),e._v(" post方法")]),e._v(" "),s("ul",[s("li",[e._v("我们知道的是post方法将数据存储在请求体(body)中，我们无法直接读取该数据，因此我们需引入一个中间件 body-parser，\n"),s("code",[e._v("npm install --save body-paser")]),e._v("\n并于使用post方法之前引入")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("app.use(require('body-parser')());\napp.post('/login', function (req, res) {\n        console.log(req.body.account);\n        console.log(req.body.password);\n        ......\n        //存入数据库\n        ......\n        //从定向页面\n        res.send();\n})\n")])])]),s("ul",[s("li",[e._v("需注意的是该方法也会重新定向页面，可返回一HTML页面提示用户成功或失败，不过该方法会在用户刷新页面时发出警告，且影响到回退按钮与历史记录，因此不推荐使用。")])]),e._v(" "),s("h2",{attrs:{id:"使用ajax方法异步发送表单数据（常用）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用ajax方法异步发送表单数据（常用）"}},[e._v("#")]),e._v(" 使用Ajax方法异步发送表单数据（常用）")]),e._v(" "),s("ul",[s("li",[e._v("该方法与上面提到的两种在接收数据上完全一样，在服务端只是添加一判断保证数据是以Ajax方法发送过来的")])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("app.use(require('body-parser')());\napp.post('/login', function (req, res) {\n    if (req.xhr || req.accepts('json,html') == 'json') {\n        console.log(req.body.account);\n        console.log(req.body.password);\n        res.send({type: 'login', status: 'scuess'});\n    }\n    else {\n        res.send({type: 'login', status: 'error'});\n    }\n});\n")])])]),s("ul",[s("li",[e._v("该方法由于其异步的性质不会重载前端页面，比较常用。")])]),e._v(" "),s("h2",{attrs:{id:"html表单文件上传"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#html表单文件上传"}},[e._v("#")]),e._v(" HTML表单文件上传")]),e._v(" "),s("ul",[s("li",[e._v("上传时需设置表单属性"),s("code",[e._v('enctype="multipart/form-data"')])])]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('    <form action="http://127.0.0.1:3000" class="col-md-4 col-md-offset-4" enctype="multipart/form-data" method="post">\n        <div class="form-group">\n            <label for="file" class="control-label">上传文件</label>\n            <input type="file" name="file" id="file">\n        </div>\n        <div class="form-group">\n            <input type="submit" name="submit" class="btn btn-default btn-block">\n        </div>\n    </form>\n')])])]),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("var formidable = require('formidable');\napp.post('/', function (req, res) {\n    var formdata = new formidable.IncomingForm();\n    formdata.parse(req, function (err, filed, files) {\n        console.log(files);\n    });\n});\n")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);